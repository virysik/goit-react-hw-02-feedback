{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","App.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","this","props","good","neutral","bad","total","positivePercentage","className","s","list","item","Component","FeedbackOptions","options","onLeaveFeedback","optionsArr","Object","keys","buttons","map","option","type","button","onClick","Section","title","children","text","Notification","message","App","state","handleClick","setState","prevState","totalFeedbacks","countTotalFeedback","Math","round","feedbacks","positivePercg","countPositiveFeedbackPercentage","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,qBCAzDD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,kC,kBCAtED,EAAOC,QAAU,CAAC,KAAO,wB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,6B,gBCAzBD,EAAOC,QAAU,CAAC,UAAY,yB,kKCkBfC,E,4JAdb,WACE,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBACnC,OACE,qBAAIC,UAAWC,IAAEC,KAAjB,UACE,qBAAIF,UAAWC,IAAEE,KAAjB,mBAA8BR,KAC9B,qBAAIK,UAAWC,IAAEE,KAAjB,sBAAiCP,KACjC,qBAAII,UAAWC,IAAEE,KAAjB,kBAA6BN,KAC7B,qBAAIG,UAAWC,IAAEE,KAAjB,oBAA+BL,KAC/B,qBAAIE,UAAWC,IAAEE,KAAjB,gCAA2CJ,EAA3C,c,GATiBK,a,gBCsBVC,E,4JArBb,WACE,MAAqCZ,KAAKC,MAAlCY,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACXC,EAAaC,OAAOC,KAAKJ,GAE/B,OACE,qBAAKN,UAAWC,IAAEU,QAAlB,SACGH,EAAWI,KAAI,SAAAC,GAAM,OACpB,wBAEEC,KAAK,SACLd,UAAWC,IAAEc,OACbC,QAAS,kBAAMT,EAAgBM,IAJjC,SAMGA,GALIA,Y,GATaT,a,iBCQfa,MATf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,qCACE,mBAAGnB,UAAWC,IAAEmB,KAAhB,SAAuBF,IACtBC,M,iBCAQE,MAJf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,mBAAGtB,UAAWC,IAAEmB,KAAhB,SAAuBE,K,iBC2DjBC,E,4MAvDbC,MAAQ,CACN7B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP4B,YAAc,SAAAZ,GACZ,EAAKa,UAAS,SAAAC,GAAS,sBACpBd,EAASc,EAAUd,GAAU,O,wDAIlC,WACE,MAA+BpB,KAAK+B,MACpC,OADA,EAAQ7B,KAAR,EAAcC,QAAd,EAAuBC,M,6CAIzB,WACE,IAAQF,EAASF,KAAK+B,MAAd7B,KACFiC,EAAiBnC,KAAKoC,qBAE5B,OAAgB,IAATlC,EAAamC,KAAKC,MAAc,IAAPpC,EAAciC,GAAkB,I,oBAGlE,WACE,MAA+BnC,KAAK+B,MAA5B7B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBmC,EAAYvC,KAAKoC,qBACjBI,EAAgBxC,KAAKyC,kCAE3B,OACE,sBAAKlC,UAAWC,IAAEkC,UAAlB,UACE,cAAC,EAAD,CAASjB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAASb,KAAK+B,MACdjB,gBAAiBd,KAAKgC,gBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGc,EACC,cAAC,EAAD,CACErC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkC,EACPjC,mBAAoBkC,IAGtB,cAAC,EAAD,CAAcX,QAAQ,+B,GAjDhBlB,aCFlBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ed0186f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__2qTWo\",\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Section_text__3Ab64\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__3WvWm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nclass Statistics extends Component {\n  render() {\n    const { good, neutral, bad, total, positivePercentage } = this.props;\n    return (\n      <ul className={s.list}>\n        <li className={s.item}>Good: {good}</li>\n        <li className={s.item}>Neutral: {neutral}</li>\n        <li className={s.item}>Bad: {bad}</li>\n        <li className={s.item}>Total: {total}</li>\n        <li className={s.item}>Positive feedback: {positivePercentage}%</li>\n      </ul>\n    );\n  }\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onLeaveFeedback } = this.props;\n    const optionsArr = Object.keys(options);\n\n    return (\n      <div className={s.buttons}>\n        {optionsArr.map(option => (\n          <button\n            key={option}\n            type=\"button\"\n            className={s.button}\n            onClick={() => onLeaveFeedback(option)}\n          >\n            {option}\n          </button>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <>\n      <p className={s.text}>{title}</p>\n      {children}\n    </>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ message }) {\n  return <p className={s.text}>{message}</p>;\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import { Component } from 'react';\nimport Statistics from 'components/Statistics';\nimport FeedbackOptions from 'components/FeedbackOptions';\nimport Section from 'components/Section';\nimport Notification from 'components/Notification';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n    const totalFeedbacks = this.countTotalFeedback();\n\n    return good !== 0 ? Math.round((good * 100) / totalFeedbacks) : 0;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const feedbacks = this.countTotalFeedback();\n    const positivePercg = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className={s.container}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleClick}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"Statistics\">\n          {feedbacks ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={feedbacks}\n              positivePercentage={positivePercg}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}